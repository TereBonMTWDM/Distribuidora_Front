trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

jobs:
- job: Build
  displayName: 'Build the Node.js app'
  pool:
    #name: 'AgentePool'  # Usa el nombre del pool que creaste
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self

  # Cache de dependencias de npm
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      path: ~/.npm
      cacheHitVar: NpmCacheRestored

  # Usar Node.js versión 20
  - task: UseNode@1
    inputs:
      versionSpec: '20.x'

  # Instalar dependencias
  - script: npm install --force --silent
    displayName: 'Instalar dependencias'

  # Construir la aplicación
  - script: npm run build
    displayName: 'Construir la aplicación'

  # Publicar el artefacto
  - task: PublishPipelineArtifact@1  # Corregido el nombre de la tarea
    inputs:
      targetPath: '$(Build.SourcesDirectory)/dist/inverser-admin'
      artifact: 'node-app'
      retention: 7  # Mantener el artefacto durante 7 días

- job: Deploy
  displayName: 'Deploy to Azure Web App'
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: Build

  steps:
  - download: current
    artifact: 'node-app'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'AzureSubscriptionConnection'
      appName: 'inverser-admin'
      package: '$(Pipeline.Workspace)/node-app'
      deploymentMethod: 'runFromPackage'
